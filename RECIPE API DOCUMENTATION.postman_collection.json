{
	"info": {
		"_postman_id": "ed951e8e-e143-4425-8ac0-6dc5efda2a28",
		"name": "RECIPE API DOCUMENTATION",
		"description": "## Base URL\n\n[https://localhost:5000/api/recipes](http://your-api-url.com/api/recipes)",
		"schema": "https://schema.getpostman.com/json/collection/v2.1.0/collection.json",
		"_exporter_id": "9791873"
	},
	"item": [
		{
			"name": "Collections",
			"item": [
				{
					"name": "Create a collection",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									""
								],
								"type": "text/javascript",
								"packages": {}
							}
						}
					],
					"request": {
						"auth": {
							"type": "noauth"
						},
						"method": "POST",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n        \"title\": \"buritto\",\n  \"ingredients\": [\"carrot\",\"onion\",\"tomato\",\"mayonise\"],\n  \"instructions\":\"mix all ingegredients together and stuff inside bun\",\n  \"prepTime\": 15, \n  \"cookTime\": 25, \n  \"servings\": 1, // Number of servings\n  \"difficulty\": \"Easy\", // Cooking difficulty\n  \"cuisine\": \"mexican\", // Italian, Mexican, Indian\n  \"category\": \"Main Course\", //  Dessert, Main Course, Appetizer\n  \"imageUrl\": \"buritto.url\" // URL for recipe image\n    }"
						},
						"url": {
							"raw": "http://localhost:5000/api/recipes",
							"protocol": "http",
							"host": [
								"localhost"
							],
							"port": "5000",
							"path": [
								"api",
								"recipes"
							]
						},
						"description": "# **Endpoints**\n\n### 1\\. Create a Recipe\n\n**Endpoint:**\n\nPOST /api/recipes\n\n**Description:**  \nCreates a new recipe."
					},
					"response": [
						{
							"name": "Successful Response",
							"originalRequest": {
								"method": "POST",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/json"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n    \"collection\": {\n        \"info\": {\n            \"name\": \"Test Collection\",\n            \"description\": \"This collection makes a request to the Postman Echo service to get a list of request headers sent by an HTTP client.\",\n            \"schema\": \"https://schema.getpostman.com/json/collection/v2.1.0/collection.json\"\n        },\n        \"item\": [\n            {\n                \"name\": \"Test GET Response\",\n                \"event\": [\n                    {\n                        \"listen\": \"test\",\n                        \"script\": {\n                            \"id\": \"7d2334fc-a84a-4c3d-b26c-7529afa4c0ae\",\n                            \"exec\": [\n                                \"pm.test(\\\"Status code is 200\\\", function () {\",\n                                \"    pm.response.to.have.status(200);\",\n                                \"});\"\n                                ],\n                            \"type\": \"text/javascript\"\n                            }\n                        }\n                    ],\n                \"request\": {\n                    \"url\": \"https://echo.getpostman.com/headers\",\n                    \"method\": \"GET\",\n                    \"header\": [\n                        {\n                            \"key\": \"Content-Type\",\n                            \"value\": \"application/json\"\n                        }\n                    ]\n                }\n            }\n        ]\n    }\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "https://api.getpostman.com/collections",
									"protocol": "https",
									"host": [
										"api",
										"getpostman",
										"com"
									],
									"path": [
										"collections"
									],
									"query": [
										{
											"key": "workspace",
											"value": "1f0df51a-8658-4ee8-a2a1-d2567dfa09a9",
											"description": "Optional. A workspace ID in which to create the collection.\n\nIf you do not include this query parameter, the system creates the collection in your \"My Workspace\" workspace.",
											"disabled": true
										}
									]
								}
							},
							"status": "OK",
							"code": 200,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json",
									"name": "Content-Type",
									"description": {
										"content": "",
										"type": "text/plain"
									}
								}
							],
							"cookie": [],
							"body": "{\n    \"collection\": {\n        \"id\": \"12ece9e1-2abf-4edc-8e34-de66e74114d2\",\n        \"name\": \"Test Collection\",\n        \"uid\": \"12345678-12ece9e1-2abf-4edc-8e34-de66e74114d2\"\n    }\n}"
						},
						{
							"name": "Bad Request",
							"originalRequest": {
								"method": "POST",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/json"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n    \"collection\": {\n        \"info\": {\n            \"name\": \"Test Collection\",\n            \"description\": \"This collection makes a request to the Postman Echo service to get a list of request headers sent by an HTTP client.\",\n            \"schema\": \"https://schema.getpostman.com/json/collection/v2.1.0/collection.json\"\n        },\n        \"item\": [\n            {\n                \"name\": \"Test GET Response\",\n                \"event\": [\n                    {\n                        \"listen\": \"test\",\n                        \"script\": {\n                            \"id\": \"7d2334fc-a84a-4c3d-b26c-7529afa4c0ae\",\n                            \"exec\": [\n                                \"pm.test(\\\"Status code is 200\\\", function () {\",\n                                \"    pm.response.to.have.status(200);\",\n                                \"});\"\n                                ],\n                            \"type\": \"text/javascript\"\n                            }\n                        }\n                    ],\n                \"request\": {\n                    \"url\": \"https://echo.getpostman.com/headers\",\n                    \"method\": \"GET\",\n                    \"header\": [\n                        {\n                            \"key\": \"Content-Type\",\n                            \"value\": \"application/json\"\n                        }\n                    ]\n                }\n            }\n        ]\n    }\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "https://api.getpostman.com/collections",
									"protocol": "https",
									"host": [
										"api",
										"getpostman",
										"com"
									],
									"path": [
										"collections"
									],
									"query": [
										{
											"key": "workspace",
											"value": "1f0df51a-8658-4ee8-a2a1-d2567dfa09a9",
											"description": "Optional. A workspace ID in which to create the collection.\n\nIf you do not include this query parameter, the system creates the collection in your \"My Workspace\" workspace.",
											"disabled": true
										}
									]
								}
							},
							"status": "Bad Request",
							"code": 400,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json",
									"name": "Content-Type",
									"description": {
										"content": "",
										"type": "text/plain"
									}
								}
							],
							"cookie": [],
							"body": "{\n    \"error\": {\n        \"name\": \"instanceFoundError\",\n        \"message\": \"The specified item already exists.\",\n        \"details\": {\n            \"item\": \"collection\",\n            \"id\": \"12ece9e1-2abf-4edc-8e34-de66e74114d2\"\n        }\n    }\n}"
						},
						{
							"name": "Malformed Request",
							"originalRequest": {
								"method": "POST",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/json",
										"name": "Content-Type",
										"type": "text"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n    \"collection\": {\n        \"item\": [\n            {\n                \"name\": \"Test GET Response\",\n                \"event\": [\n                    {\n                        \"listen\": \"test\",\n                        \"script\": {\n                            \"id\": \"7d2334fc-a84a-4c3d-b26c-7529afa4c0ae\",\n                            \"exec\": [\n                                \"pm.test(\\\"Status code is 200\\\", function () {\",\n                                \"    pm.response.to.have.status(200);\",\n                                \"});\"\n                                ],\n                            \"type\": \"text/javascript\"\n                            }\n                        }\n                    ],\n                \"request\": {\n                    \"url\": \"https://echo.getpostman.com/headers\",\n                    \"method\": \"GET\",\n                    \"header\": [\n                        {\n                            \"key\": \"Content-Type\",\n                            \"value\": \"application/json\"\n                        }\n                    ]\n                }\n            }\n        ]\n    }\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "https://api.getpostman.com/collections",
									"protocol": "https",
									"host": [
										"api",
										"getpostman",
										"com"
									],
									"path": [
										"collections"
									],
									"query": [
										{
											"key": "workspace",
											"value": "1f0df51a-8658-4ee8-a2a1-d2567dfa09a9",
											"description": "Optional. A workspace ID in which to create the collection.\n\nIf you do not include this query parameter, the system creates the collection in your \"My Workspace\" workspace.",
											"disabled": true
										}
									]
								}
							},
							"status": "Bad Request",
							"code": 400,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json; charset=utf-8"
								}
							],
							"cookie": [],
							"body": "{\n    \"error\": {\n        \"name\": \"malformedRequestError\",\n        \"message\": \"Found 1 errors with the supplied collection.\",\n        \"details\": [\n            \": must have required property 'info'\"\n        ]\n    }\n}"
						},
						{
							"name": "Rate Limit Exceeded",
							"originalRequest": {
								"method": "POST",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/json"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n    \"collection\": {\n        \"item\": [\n            {\n                \"name\": \"Test GET Response\",\n                \"event\": [\n                    {\n                        \"listen\": \"test\",\n                        \"script\": {\n                            \"id\": \"7d2334fc-a84a-4c3d-b26c-7529afa4c0ae\",\n                            \"exec\": [\n                                \"pm.test(\\\"Status code is 200\\\", function () {\",\n                                \"    pm.response.to.have.status(200);\",\n                                \"});\"\n                                ],\n                            \"type\": \"text/javascript\"\n                            }\n                        }\n                    ],\n                \"request\": {\n                    \"url\": \"https://echo.getpostman.com/headers\",\n                    \"method\": \"GET\",\n                    \"header\": [\n                        {\n                            \"key\": \"Content-Type\",\n                            \"value\": \"application/json\"\n                        }\n                    ]\n                }\n            }\n        ]\n    }\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "https://api.getpostman.com/collections",
									"protocol": "https",
									"host": [
										"api",
										"getpostman",
										"com"
									],
									"path": [
										"collections"
									],
									"query": [
										{
											"key": "workspace",
											"value": "1f0df51a-8658-4ee8-a2a1-d2567dfa09a9",
											"description": "Optional. A workspace ID in which to create the collection.\n\nIf you do not include this query parameter, the system creates the collection in your \"My Workspace\" workspace.",
											"disabled": true
										}
									]
								}
							},
							"status": "Too Many Requests",
							"code": 429,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json",
									"description": ""
								}
							],
							"cookie": [],
							"body": "{\n    \"error\": \"rateLimited\",\n    \"message\": \"Rate limit exceeded. Please retry after 1669048687\"\n}"
						},
						{
							"name": "createRecipe",
							"originalRequest": {
								"method": "POST",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/json"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n        \"title\": \"buritto\",\n  \"ingredients\": [\"carrot\",\"onion\",\"tomato\",\"mayonise\"],\n  \"instructions\":\"mix all ingegredients together and stuff inside bun\",\n  \"prepTime\": 15, \n  \"cookTime\": 25, \n  \"servings\": 1, // Number of servings\n  \"difficulty\": \"Easy\", // Cooking difficulty\n  \"cuisine\": \"mexican\", // Italian, Mexican, Indian\n  \"category\": \"Main Course\", //  Dessert, Main Course, Appetizer\n  \"imageUrl\": \"buritto.url\" // URL for recipe image\n    }"
								},
								"url": {
									"raw": "http://localhost:5000/api/recipes",
									"protocol": "http",
									"host": [
										"localhost"
									],
									"port": "5000",
									"path": [
										"api",
										"recipes"
									],
									"query": [
										{
											"key": "workspace",
											"value": "{{workspaceId}}",
											"description": "Optional. A workspace ID in which to create the collection.\n\nIf you do not include this query parameter, the system creates the collection in your \"My Workspace\" workspace.",
											"disabled": true
										}
									]
								}
							},
							"status": "Created",
							"code": 201,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "X-Powered-By",
									"value": "Express"
								},
								{
									"key": "Access-Control-Allow-Origin",
									"value": "*"
								},
								{
									"key": "Content-Type",
									"value": "application/json; charset=utf-8"
								},
								{
									"key": "Content-Length",
									"value": "391"
								},
								{
									"key": "ETag",
									"value": "W/\"187-oad3umY9YF/fdj6glUBGV5Q9bWs\""
								},
								{
									"key": "Date",
									"value": "Fri, 07 Feb 2025 09:33:06 GMT"
								},
								{
									"key": "Connection",
									"value": "keep-alive"
								},
								{
									"key": "Keep-Alive",
									"value": "timeout=5"
								}
							],
							"cookie": [],
							"body": "{\n    \"title\": \"buritto\",\n    \"ingredients\": [\n        \"carrot\",\n        \"onion\",\n        \"tomato\",\n        \"mayonise\"\n    ],\n    \"instructions\": \"mix all ingegredients together and stuff inside bun\",\n    \"prepTime\": 15,\n    \"cookTime\": 25,\n    \"servings\": 1,\n    \"difficulty\": \"Easy\",\n    \"cuisine\": \"mexican\",\n    \"category\": \"Main Course\",\n    \"imageUrl\": \"buritto.url\",\n    \"_id\": \"67a5d35227d3c820235f6baa\",\n    \"createdAt\": \"2025-02-07T09:33:06.927Z\",\n    \"updatedAt\": \"2025-02-07T09:33:06.927Z\",\n    \"__v\": 0\n}"
						}
					]
				},
				{
					"name": "Get a recipe",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									""
								],
								"type": "text/javascript",
								"packages": {}
							}
						}
					],
					"request": {
						"auth": {
							"type": "noauth"
						},
						"method": "GET",
						"header": [],
						"url": {
							"raw": "http://localhost:5000/api/recipes/67a5afe0a4e532499fa604c3",
							"protocol": "http",
							"host": [
								"localhost"
							],
							"port": "5000",
							"path": [
								"api",
								"recipes",
								"67a5afe0a4e532499fa604c3"
							]
						},
						"description": "### **2\\. Get a Single Recipe**\n\n**Endpoint:** GET /api/recipes/:id\n\n**Description:**\n\nFetches a single recipe by ID."
					},
					"response": [
						{
							"name": "Successful Response",
							"originalRequest": {
								"method": "GET",
								"header": [],
								"url": {
									"raw": "https://api.getpostman.com/collections/12ece9e1-2abf-4edc-8e34-de66e74114d2",
									"protocol": "https",
									"host": [
										"api",
										"getpostman",
										"com"
									],
									"path": [
										"collections",
										"12ece9e1-2abf-4edc-8e34-de66e74114d2"
									]
								}
							},
							"status": "OK",
							"code": 200,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json",
									"name": "Content-Type",
									"description": {
										"content": "",
										"type": "text/plain"
									}
								}
							],
							"cookie": [],
							"body": "{\n    \"collection\": {\n        \"info\": {\n            \"name\": \"Test Collection\",\n            \"description\": \"This is a test collection that makes a tiny request to Postman Echo service to get the list of request headers sent by a HTTP client.\",\n            \"_postman_id\": \"12ece9e1-2abf-4edc-8e34-de66e74114d2\",\n            \"schema\": \"https://schema.getpostman.com/json/collection/v2.0.0/collection.json\",\n            \"updatedAt\": \"2022-06-16T20:21:13.000Z\",\n            \"fork\": {\n                \"label\": \"Test Fork\",\n                \"createdAt\": \"2022-06-16T19:51:44.069Z\",\n                \"from\": \"12345678-12ece9e1-2abf-4edc-8e34-de66e74114d2\"\n            }\n        },\n        \"item\": [\n            {\n                \"name\": \"Test GET Response\",\n                \"id\": \"82ee981b-e19f-962a-401e-ea34ebfb4848\",\n                \"event\": [\n                    {\n                        \"listen\": \"test\",\n                        \"script\": {\n                            \"id\": \"7d2334fc-a84a-4c3d-b26c-7529afa4c0ae\",\n                            \"exec\": [\n                                \"pm.test(\\\"Status code is 200\\\", function () {\",\n                                \"    pm.response.to.have.status(200);\",\n                                \"});\"\n                            ],\n                            \"type\": \"text/javascript\"\n                        }\n                    }\n                ],\n                \"request\": {\n                    \"url\": \"https://echo.getpostman.com/headers\",\n                    \"method\": \"GET\",\n                    \"header\": [\n                        {\n                            \"key\": \"Content-Type\",\n                            \"value\": \"application/json\"\n                        }\n                    ]\n                },\n                \"response\": []\n            }\n        ]\n    }\n}"
						},
						{
							"name": "Get Collection with Access Token",
							"originalRequest": {
								"method": "GET",
								"header": [],
								"url": {
									"raw": "https://api.getpostman.com/collections/12ece9e1-2abf-4edc-8e34-de66e74114d2?access_key={{accessKey}}",
									"protocol": "https",
									"host": [
										"api",
										"getpostman",
										"com"
									],
									"path": [
										"collections",
										"12ece9e1-2abf-4edc-8e34-de66e74114d2"
									],
									"query": [
										{
											"key": "access_key",
											"value": "{{accessKey}}"
										}
									]
								}
							},
							"status": "OK",
							"code": 200,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json",
									"description": {
										"content": "",
										"type": "text/plain"
									}
								}
							],
							"cookie": [],
							"body": "{\n    \"collection\": {\n        \"info\": {\n            \"name\": \"Test Collection\",\n            \"description\": \"This is a test collection that makes a tiny request to Postman Echo service to get the list of request headers sent by a HTTP client.\",\n            \"_postman_id\": \"12ece9e1-2abf-4edc-8e34-de66e74114d2\",\n            \"schema\": \"https://schema.getpostman.com/json/collection/v2.0.0/collection.json\",\n            \"updatedAt\": \"2022-06-16T20:21:13.000Z\",\n            \"fork\": {\n                \"label\": \"Test Fork\",\n                \"createdAt\": \"2022-06-16T19:51:44.069Z\",\n                \"from\": \"12345678-12ece9e1-2abf-4edc-8e34-de66e74114d2\"\n            }\n        },\n        \"item\": [\n            {\n                \"name\": \"Test GET Response\",\n                \"id\": \"82ee981b-e19f-962a-401e-ea34ebfb4848\",\n                \"event\": [\n                    {\n                        \"listen\": \"test\",\n                        \"script\": {\n                            \"id\": \"7d2334fc-a84a-4c3d-b26c-7529afa4c0ae\",\n                            \"exec\": [\n                                \"pm.test(\\\"Status code is 200\\\", function () {\",\n                                \"    pm.response.to.have.status(200);\",\n                                \"});\"\n                            ],\n                            \"type\": \"text/javascript\"\n                        }\n                    }\n                ],\n                \"request\": {\n                    \"url\": \"https://echo.getpostman.com/headers\",\n                    \"method\": \"GET\",\n                    \"header\": [\n                        {\n                            \"key\": \"Content-Type\",\n                            \"value\": \"application/json\"\n                        }\n                    ]\n                },\n                \"response\": []\n            }\n        ]\n    }\n}"
						},
						{
							"name": "Not Found",
							"originalRequest": {
								"method": "GET",
								"header": [],
								"url": {
									"raw": "https://api.getpostman.com/collections/12ece9e1-2abf-4edc-8e34-de66e74114d2",
									"protocol": "https",
									"host": [
										"api",
										"getpostman",
										"com"
									],
									"path": [
										"collections",
										"12ece9e1-2abf-4edc-8e34-de66e74114d2"
									]
								}
							},
							"status": "Not Found",
							"code": 404,
							"_postman_previewlanguage": "json",
							"header": [],
							"cookie": [],
							"body": "{\n    \"error\": {\n        \"name\": \"instanceNotFoundError\",\n        \"message\": \"We could not find the collection you are looking for\"\n    }\n}"
						},
						{
							"name": "Rate Limit Exceeded",
							"originalRequest": {
								"method": "GET",
								"header": [],
								"url": {
									"raw": "https://api.getpostman.com/collections/12ece9e1-2abf-4edc-8e34-de66e74114d2",
									"protocol": "https",
									"host": [
										"api",
										"getpostman",
										"com"
									],
									"path": [
										"collections",
										"12ece9e1-2abf-4edc-8e34-de66e74114d2"
									]
								}
							},
							"status": "Too Many Requests",
							"code": 429,
							"_postman_previewlanguage": "json",
							"header": [],
							"cookie": [],
							"body": "{\n    \"error\": \"rateLimited\",\n    \"message\": \"Rate limit exceeded. Please retry after 1669048687\"\n}"
						},
						{
							"name": "Get a collection",
							"originalRequest": {
								"method": "GET",
								"header": [],
								"url": {
									"raw": "http://localhost:5000/api/recipes",
									"protocol": "http",
									"host": [
										"localhost"
									],
									"port": "5000",
									"path": [
										"api",
										"recipes"
									]
								}
							},
							"status": "OK",
							"code": 200,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "X-Powered-By",
									"value": "Express"
								},
								{
									"key": "Access-Control-Allow-Origin",
									"value": "*"
								},
								{
									"key": "Content-Type",
									"value": "application/json; charset=utf-8"
								},
								{
									"key": "Content-Length",
									"value": "2808"
								},
								{
									"key": "ETag",
									"value": "W/\"af8-TEQBTuCTDvbGlXJzrNMa43P8blM\""
								},
								{
									"key": "Date",
									"value": "Fri, 07 Feb 2025 09:38:30 GMT"
								},
								{
									"key": "Connection",
									"value": "keep-alive"
								},
								{
									"key": "Keep-Alive",
									"value": "timeout=5"
								}
							],
							"cookie": [],
							"body": "[\n    {\n        \"_id\": \"67a5afe0a4e532499fa604c3\",\n        \"title\": \"Spaghetti Carbonara\",\n        \"ingredients\": [\n            \"Spaghetti\",\n            \"country Eggs\",\n            \"Parmesan Cheese\",\n            \"Black Pepper\",\n            \"Pancetta\"\n        ],\n        \"instructions\": \"Cook spaghetti. Mix eggs and cheese. Combine with pancetta and pepper.\",\n        \"prepTime\": 15,\n        \"cookTime\": 25,\n        \"servings\": 4,\n        \"difficulty\": \"Medium\",\n        \"cuisine\": \"Italian\",\n        \"category\": \"Pasta\",\n        \"imageUrl\": \"http://example.com/carbonara.jpg\",\n        \"createdAt\": \"2025-02-07T07:01:52.879Z\",\n        \"updatedAt\": \"2025-02-07T07:01:52.879Z\",\n        \"__v\": 0\n    },\n    {\n        \"_id\": \"67a5b044a4e532499fa604c7\",\n        \"title\": \"Sushi Rolls\",\n        \"ingredients\": [\n            \"Sushi Rice\",\n            \"Nori (Seaweed)\",\n            \"Fresh Fish (Salmon/Tuna)\",\n            \"Cucumber\",\n            \"Avocado\",\n            \"Soy Sauce\",\n            \"Wasabi\",\n            \"Pickled Ginger\"\n        ],\n        \"instructions\": \"Cook and season sushi rice. Place nori on a bamboo mat. Spread rice evenly. Add fish, cucumber, and avocado. Roll tightly and slice. Serve with soy sauce, wasabi, and pickled ginger.\",\n        \"prepTime\": 25,\n        \"cookTime\": 0,\n        \"servings\": 2,\n        \"difficulty\": \"Hard\",\n        \"cuisine\": \"Japanese\",\n        \"category\": \"Sushi\",\n        \"imageUrl\": \"http://example.com/sushi-rolls.jpg\",\n        \"createdAt\": \"2025-02-07T07:03:32.314Z\",\n        \"updatedAt\": \"2025-02-07T07:03:32.314Z\",\n        \"__v\": 0\n    },\n    {\n        \"_id\": \"67a5b0aca4e532499fa604cb\",\n        \"title\": \"Classic Margherita Pizza\",\n        \"ingredients\": [\n            \"Pizza Dough\",\n            \"Tomato Sauce\",\n            \"Fresh Mozzarella\",\n            \"Fresh Basil\",\n            \"Olive Oil\",\n            \"Salt\"\n        ],\n        \"instructions\": \"Preheat oven to 475°F (245°C). Roll out pizza dough. Spread tomato sauce evenly. Add slices of fresh mozzarella. Bake for 10-12 minutes until golden and bubbly. Garnish with fresh basil and drizzle with olive oil before serving.\",\n        \"prepTime\": 15,\n        \"cookTime\": 12,\n        \"servings\": 2,\n        \"difficulty\": \"Medium\",\n        \"cuisine\": \"Italian\",\n        \"category\": \"Pizza\",\n        \"imageUrl\": \"http://example.com/margherita-pizza.jpg\",\n        \"createdAt\": \"2025-02-07T07:05:16.601Z\",\n        \"updatedAt\": \"2025-02-07T07:05:16.601Z\",\n        \"__v\": 0\n    },\n    {\n        \"_id\": \"67a5bfe027d3c820235f6ba8\",\n        \"title\": \"Beef Stroganoff\",\n        \"ingredients\": [\n            \"Beef Sirloin\",\n            \"Mushrooms\",\n            \"Onion\",\n            \"Garlic\",\n            \"Sour Cream\",\n            \"Beef Broth\",\n            \"Dijon Mustard\",\n            \"Butter\",\n            \"Flour\",\n            \"Egg Noodles\"\n        ],\n        \"instructions\": \"Sauté onions, garlic, and mushrooms in butter. Add sliced beef and cook until browned. Stir in flour, mustard, and beef broth. Simmer until thickened. Mix in sour cream and serve over cooked egg noodles.\",\n        \"prepTime\": 15,\n        \"cookTime\": 25,\n        \"servings\": 4,\n        \"difficulty\": \"Medium\",\n        \"cuisine\": \"Russian\",\n        \"category\": \"Main Course\",\n        \"imageUrl\": \"http://example.com/beef-stroganoff.jpg\",\n        \"createdAt\": \"2025-02-07T08:10:08.252Z\",\n        \"updatedAt\": \"2025-02-07T08:10:08.252Z\",\n        \"__v\": 0\n    },\n    {\n        \"_id\": \"67a5d35227d3c820235f6baa\",\n        \"title\": \"buritto\",\n        \"ingredients\": [\n            \"carrot\",\n            \"onion\",\n            \"tomato\",\n            \"mayonise\"\n        ],\n        \"instructions\": \"mix all ingegredients together and stuff inside bun\",\n        \"prepTime\": 15,\n        \"cookTime\": 25,\n        \"servings\": 1,\n        \"difficulty\": \"Easy\",\n        \"cuisine\": \"mexican\",\n        \"category\": \"Main Course\",\n        \"imageUrl\": \"buritto.url\",\n        \"createdAt\": \"2025-02-07T09:33:06.927Z\",\n        \"updatedAt\": \"2025-02-07T09:33:06.927Z\",\n        \"__v\": 0\n    }\n]"
						},
						{
							"name": "Get a collection",
							"originalRequest": {
								"method": "GET",
								"header": [],
								"url": {
									"raw": "http://localhost:5000/api/recipes",
									"protocol": "http",
									"host": [
										"localhost"
									],
									"port": "5000",
									"path": [
										"api",
										"recipes"
									]
								}
							},
							"status": "OK",
							"code": 200,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "X-Powered-By",
									"value": "Express"
								},
								{
									"key": "Access-Control-Allow-Origin",
									"value": "*"
								},
								{
									"key": "Content-Type",
									"value": "application/json; charset=utf-8"
								},
								{
									"key": "Content-Length",
									"value": "2808"
								},
								{
									"key": "ETag",
									"value": "W/\"af8-TEQBTuCTDvbGlXJzrNMa43P8blM\""
								},
								{
									"key": "Date",
									"value": "Fri, 07 Feb 2025 09:38:30 GMT"
								},
								{
									"key": "Connection",
									"value": "keep-alive"
								},
								{
									"key": "Keep-Alive",
									"value": "timeout=5"
								}
							],
							"cookie": [],
							"body": "[\n    {\n        \"_id\": \"67a5afe0a4e532499fa604c3\",\n        \"title\": \"Spaghetti Carbonara\",\n        \"ingredients\": [\n            \"Spaghetti\",\n            \"country Eggs\",\n            \"Parmesan Cheese\",\n            \"Black Pepper\",\n            \"Pancetta\"\n        ],\n        \"instructions\": \"Cook spaghetti. Mix eggs and cheese. Combine with pancetta and pepper.\",\n        \"prepTime\": 15,\n        \"cookTime\": 25,\n        \"servings\": 4,\n        \"difficulty\": \"Medium\",\n        \"cuisine\": \"Italian\",\n        \"category\": \"Pasta\",\n        \"imageUrl\": \"http://example.com/carbonara.jpg\",\n        \"createdAt\": \"2025-02-07T07:01:52.879Z\",\n        \"updatedAt\": \"2025-02-07T07:01:52.879Z\",\n        \"__v\": 0\n    },\n    {\n        \"_id\": \"67a5b044a4e532499fa604c7\",\n        \"title\": \"Sushi Rolls\",\n        \"ingredients\": [\n            \"Sushi Rice\",\n            \"Nori (Seaweed)\",\n            \"Fresh Fish (Salmon/Tuna)\",\n            \"Cucumber\",\n            \"Avocado\",\n            \"Soy Sauce\",\n            \"Wasabi\",\n            \"Pickled Ginger\"\n        ],\n        \"instructions\": \"Cook and season sushi rice. Place nori on a bamboo mat. Spread rice evenly. Add fish, cucumber, and avocado. Roll tightly and slice. Serve with soy sauce, wasabi, and pickled ginger.\",\n        \"prepTime\": 25,\n        \"cookTime\": 0,\n        \"servings\": 2,\n        \"difficulty\": \"Hard\",\n        \"cuisine\": \"Japanese\",\n        \"category\": \"Sushi\",\n        \"imageUrl\": \"http://example.com/sushi-rolls.jpg\",\n        \"createdAt\": \"2025-02-07T07:03:32.314Z\",\n        \"updatedAt\": \"2025-02-07T07:03:32.314Z\",\n        \"__v\": 0\n    },\n    {\n        \"_id\": \"67a5b0aca4e532499fa604cb\",\n        \"title\": \"Classic Margherita Pizza\",\n        \"ingredients\": [\n            \"Pizza Dough\",\n            \"Tomato Sauce\",\n            \"Fresh Mozzarella\",\n            \"Fresh Basil\",\n            \"Olive Oil\",\n            \"Salt\"\n        ],\n        \"instructions\": \"Preheat oven to 475°F (245°C). Roll out pizza dough. Spread tomato sauce evenly. Add slices of fresh mozzarella. Bake for 10-12 minutes until golden and bubbly. Garnish with fresh basil and drizzle with olive oil before serving.\",\n        \"prepTime\": 15,\n        \"cookTime\": 12,\n        \"servings\": 2,\n        \"difficulty\": \"Medium\",\n        \"cuisine\": \"Italian\",\n        \"category\": \"Pizza\",\n        \"imageUrl\": \"http://example.com/margherita-pizza.jpg\",\n        \"createdAt\": \"2025-02-07T07:05:16.601Z\",\n        \"updatedAt\": \"2025-02-07T07:05:16.601Z\",\n        \"__v\": 0\n    },\n    {\n        \"_id\": \"67a5bfe027d3c820235f6ba8\",\n        \"title\": \"Beef Stroganoff\",\n        \"ingredients\": [\n            \"Beef Sirloin\",\n            \"Mushrooms\",\n            \"Onion\",\n            \"Garlic\",\n            \"Sour Cream\",\n            \"Beef Broth\",\n            \"Dijon Mustard\",\n            \"Butter\",\n            \"Flour\",\n            \"Egg Noodles\"\n        ],\n        \"instructions\": \"Sauté onions, garlic, and mushrooms in butter. Add sliced beef and cook until browned. Stir in flour, mustard, and beef broth. Simmer until thickened. Mix in sour cream and serve over cooked egg noodles.\",\n        \"prepTime\": 15,\n        \"cookTime\": 25,\n        \"servings\": 4,\n        \"difficulty\": \"Medium\",\n        \"cuisine\": \"Russian\",\n        \"category\": \"Main Course\",\n        \"imageUrl\": \"http://example.com/beef-stroganoff.jpg\",\n        \"createdAt\": \"2025-02-07T08:10:08.252Z\",\n        \"updatedAt\": \"2025-02-07T08:10:08.252Z\",\n        \"__v\": 0\n    },\n    {\n        \"_id\": \"67a5d35227d3c820235f6baa\",\n        \"title\": \"buritto\",\n        \"ingredients\": [\n            \"carrot\",\n            \"onion\",\n            \"tomato\",\n            \"mayonise\"\n        ],\n        \"instructions\": \"mix all ingegredients together and stuff inside bun\",\n        \"prepTime\": 15,\n        \"cookTime\": 25,\n        \"servings\": 1,\n        \"difficulty\": \"Easy\",\n        \"cuisine\": \"mexican\",\n        \"category\": \"Main Course\",\n        \"imageUrl\": \"buritto.url\",\n        \"createdAt\": \"2025-02-07T09:33:06.927Z\",\n        \"updatedAt\": \"2025-02-07T09:33:06.927Z\",\n        \"__v\": 0\n    }\n]"
						},
						{
							"name": "Get a collection",
							"originalRequest": {
								"method": "GET",
								"header": [],
								"url": {
									"raw": "http://localhost:5000/api/recipes/67a5afe0a4e532499fa604c3",
									"protocol": "http",
									"host": [
										"localhost"
									],
									"port": "5000",
									"path": [
										"api",
										"recipes",
										"67a5afe0a4e532499fa604c3"
									]
								}
							},
							"status": "OK",
							"code": 200,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "X-Powered-By",
									"value": "Express"
								},
								{
									"key": "Access-Control-Allow-Origin",
									"value": "*"
								},
								{
									"key": "Content-Type",
									"value": "application/json; charset=utf-8"
								},
								{
									"key": "Content-Length",
									"value": "473"
								},
								{
									"key": "ETag",
									"value": "W/\"1d9-xAgbfIB6fNoTzbi+Atqj6X9WsGg\""
								},
								{
									"key": "Date",
									"value": "Fri, 07 Feb 2025 09:57:34 GMT"
								},
								{
									"key": "Connection",
									"value": "keep-alive"
								},
								{
									"key": "Keep-Alive",
									"value": "timeout=5"
								}
							],
							"cookie": [],
							"body": "{\n    \"_id\": \"67a5afe0a4e532499fa604c3\",\n    \"title\": \"Spaghetti Carbonara\",\n    \"ingredients\": [\n        \"Spaghetti\",\n        \"country Eggs\",\n        \"Parmesan Cheese\",\n        \"Black Pepper\",\n        \"Pancetta\"\n    ],\n    \"instructions\": \"Cook spaghetti. Mix eggs and cheese. Combine with pancetta and pepper.\",\n    \"prepTime\": 15,\n    \"cookTime\": 25,\n    \"servings\": 4,\n    \"difficulty\": \"Medium\",\n    \"cuisine\": \"Italian\",\n    \"category\": \"Pasta\",\n    \"imageUrl\": \"http://example.com/carbonara.jpg\",\n    \"createdAt\": \"2025-02-07T07:01:52.879Z\",\n    \"updatedAt\": \"2025-02-07T07:01:52.879Z\",\n    \"__v\": 0\n}"
						},
						{
							"name": "Get a collection",
							"originalRequest": {
								"method": "GET",
								"header": [],
								"url": {
									"raw": "http://localhost:5000/api/recipes/67a5afe0a4e532499fa604c3",
									"protocol": "http",
									"host": [
										"localhost"
									],
									"port": "5000",
									"path": [
										"api",
										"recipes",
										"67a5afe0a4e532499fa604c3"
									]
								}
							},
							"status": "OK",
							"code": 200,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "X-Powered-By",
									"value": "Express"
								},
								{
									"key": "Access-Control-Allow-Origin",
									"value": "*"
								},
								{
									"key": "Content-Type",
									"value": "application/json; charset=utf-8"
								},
								{
									"key": "Content-Length",
									"value": "471"
								},
								{
									"key": "ETag",
									"value": "W/\"1d7-b9nbnt01Sx4vwKvAaYOd7HsuEps\""
								},
								{
									"key": "Date",
									"value": "Fri, 07 Feb 2025 10:02:24 GMT"
								},
								{
									"key": "Connection",
									"value": "keep-alive"
								},
								{
									"key": "Keep-Alive",
									"value": "timeout=5"
								}
							],
							"cookie": [],
							"body": "{\n    \"_id\": \"67a5afe0a4e532499fa604c3\",\n    \"title\": \"Spaghetti Carbonara\",\n    \"ingredients\": [\n        \"Spaghetti\",\n        \"country Eggs\",\n        \"chedar Cheese\",\n        \"Black Pepper\",\n        \"Pancetta\"\n    ],\n    \"instructions\": \"Cook spaghetti. Mix eggs and cheese. Combine with pancetta and pepper.\",\n    \"prepTime\": 15,\n    \"cookTime\": 25,\n    \"servings\": 4,\n    \"difficulty\": \"Medium\",\n    \"cuisine\": \"Italian\",\n    \"category\": \"Pasta\",\n    \"imageUrl\": \"http://example.com/carbonara.jpg\",\n    \"createdAt\": \"2025-02-07T07:01:52.879Z\",\n    \"updatedAt\": \"2025-02-07T07:01:52.879Z\",\n    \"__v\": 0\n}"
						},
						{
							"name": "Get a recipe",
							"originalRequest": {
								"method": "GET",
								"header": [],
								"url": {
									"raw": "http://localhost:5000/api/recipes/67a5afe0a4e532499fa604c3",
									"protocol": "http",
									"host": [
										"localhost"
									],
									"port": "5000",
									"path": [
										"api",
										"recipes",
										"67a5afe0a4e532499fa604c3"
									]
								}
							},
							"status": "OK",
							"code": 200,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "X-Powered-By",
									"value": "Express"
								},
								{
									"key": "Access-Control-Allow-Origin",
									"value": "*"
								},
								{
									"key": "Content-Type",
									"value": "application/json; charset=utf-8"
								},
								{
									"key": "Content-Length",
									"value": "471"
								},
								{
									"key": "ETag",
									"value": "W/\"1d7-b9nbnt01Sx4vwKvAaYOd7HsuEps\""
								},
								{
									"key": "Date",
									"value": "Fri, 07 Feb 2025 10:36:50 GMT"
								},
								{
									"key": "Connection",
									"value": "keep-alive"
								},
								{
									"key": "Keep-Alive",
									"value": "timeout=5"
								}
							],
							"cookie": [],
							"body": "{\n    \"_id\": \"67a5afe0a4e532499fa604c3\",\n    \"title\": \"Spaghetti Carbonara\",\n    \"ingredients\": [\n        \"Spaghetti\",\n        \"country Eggs\",\n        \"chedar Cheese\",\n        \"Black Pepper\",\n        \"Pancetta\"\n    ],\n    \"instructions\": \"Cook spaghetti. Mix eggs and cheese. Combine with pancetta and pepper.\",\n    \"prepTime\": 15,\n    \"cookTime\": 25,\n    \"servings\": 4,\n    \"difficulty\": \"Medium\",\n    \"cuisine\": \"Italian\",\n    \"category\": \"Pasta\",\n    \"imageUrl\": \"http://example.com/carbonara.jpg\",\n    \"createdAt\": \"2025-02-07T07:01:52.879Z\",\n    \"updatedAt\": \"2025-02-07T07:01:52.879Z\",\n    \"__v\": 0\n}"
						}
					]
				},
				{
					"name": "Delete a collection",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									""
								],
								"type": "text/javascript",
								"packages": {}
							}
						}
					],
					"request": {
						"auth": {
							"type": "noauth"
						},
						"method": "DELETE",
						"header": [],
						"url": {
							"raw": "http://localhost:5000/api/recipes/67a5b044a4e532499fa604c7",
							"protocol": "http",
							"host": [
								"localhost"
							],
							"port": "5000",
							"path": [
								"api",
								"recipes",
								"67a5b044a4e532499fa604c7"
							]
						},
						"description": "### 3\\. Delete a Recipe\n\n**Endpoint:**DELETE /api/recipes/:id\n\n**Description:**  \nDeletes a recipe by ID."
					},
					"response": [
						{
							"name": "Successful Response",
							"originalRequest": {
								"method": "DELETE",
								"header": [],
								"url": {
									"raw": "https://api.getpostman.com/collections/12ece9e1-2abf-4edc-8e34-de66e74114d2",
									"protocol": "https",
									"host": [
										"api",
										"getpostman",
										"com"
									],
									"path": [
										"collections",
										"12ece9e1-2abf-4edc-8e34-de66e74114d2"
									]
								}
							},
							"status": "OK",
							"code": 200,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json",
									"description": {
										"content": "",
										"type": "text/plain"
									}
								}
							],
							"cookie": [],
							"body": "{\n    \"collection\": {\n        \"id\": \"12ece9e1-2abf-4edc-8e34-de66e74114d2\",\n        \"uid\": \"12345678-12ece9e1-2abf-4edc-8e34-de66e74114d2\"\n    }\n}"
						},
						{
							"name": "Not Found",
							"originalRequest": {
								"method": "DELETE",
								"header": [],
								"url": {
									"raw": "https://api.getpostman.com/collections/12ece9e1-2abf-4edc-8e34-de66e74114d2",
									"protocol": "https",
									"host": [
										"api",
										"getpostman",
										"com"
									],
									"path": [
										"collections",
										"12ece9e1-2abf-4edc-8e34-de66e74114d2"
									]
								}
							},
							"status": "Not Found",
							"code": 404,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json",
									"name": "Content-Type",
									"description": {
										"content": "",
										"type": "text/plain"
									}
								}
							],
							"cookie": [],
							"body": "{\n    \"error\": {\n        \"name\": \"instanceNotFoundError\",\n        \"message\": \"The specified item does not exist.\",\n        \"details\": {\n            \"item\": \"collection\",\n            \"id\": \"12ece9e1-2abf-4edc-8e34-de66e74114d2\"\n        }\n    }\n}"
						},
						{
							"name": "Rate Limit Exceeded",
							"originalRequest": {
								"method": "DELETE",
								"header": [],
								"url": {
									"raw": "https://api.getpostman.com/collections/12ece9e1-2abf-4edc-8e34-de66e74114d2",
									"protocol": "https",
									"host": [
										"api",
										"getpostman",
										"com"
									],
									"path": [
										"collections",
										"12ece9e1-2abf-4edc-8e34-de66e74114d2"
									]
								}
							},
							"status": "Too Many Requests",
							"code": 429,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json",
									"description": {
										"content": "",
										"type": "text/plain"
									}
								}
							],
							"cookie": [],
							"body": "{\n    \"error\": \"rateLimited\",\n    \"message\": \"Rate limit exceeded. Please retry after 1669048687\"\n}"
						}
					]
				},
				{
					"name": "Update a collection",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									""
								],
								"type": "text/javascript",
								"packages": {}
							}
						}
					],
					"request": {
						"auth": {
							"type": "noauth"
						},
						"method": "PUT",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n    \"title\": \"Spaghetti Carbonara\",\n    \"ingredients\": [\n        \"Spaghetti\",\n        \"country Eggs\",\n        \"chedar Cheese\",\n        \"Black Pepper\",\n        \"Pancetta\"\n    ],\n    \"instructions\": \"Cook spaghetti. Mix eggs and cheese. Combine with pancetta and pepper.\",\n    \"prepTime\": 15,\n    \"cookTime\": 25,\n    \"servings\": 4,\n    \"difficulty\": \"Medium\",\n    \"cuisine\": \"Italian\",\n    \"category\": \"Pasta\",\n    \"imageUrl\": \"http://example.com/carbonara.jpg\"\n    \n}"
						},
						"url": {
							"raw": "http://localhost:5000/api/recipes/67a5afe0a4e532499fa604c3",
							"protocol": "http",
							"host": [
								"localhost"
							],
							"port": "5000",
							"path": [
								"api",
								"recipes",
								"67a5afe0a4e532499fa604c3"
							]
						},
						"description": "### **4\\. Update a Recipe**\n\n**Endpoint:**PUT /api/recipes/:id\n\n**Description:**  \nUpdates an existing recipe."
					},
					"response": [
						{
							"name": "Successful Response",
							"originalRequest": {
								"method": "PUT",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/json"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n    \"collection\": {\n        \"info\": {\n            \"name\": \"Test Collection\",\n            \"description\": \"This collection makes a request to the Postman Echo service to get a list of request headers sent by an HTTP client.\",\n            \"schema\": \"https://schema.getpostman.com/json/collection/v2.1.0/collection.json\"\n        },\n        \"item\": [\n            {\n                \"name\": \"Test POST Response\",\n                \"event\": [\n                    {\n                        \"listen\": \"test\",\n                        \"script\": {\n                            \"id\": \"7d2334fc-a84a-4c3d-b26c-7529afa4c0ae\",\n                            \"exec\": [\n                                \"pm.test(\\\"Status code is 200\\\", function () {\",\n                                \"    pm.response.to.have.status(200);\",\n                                \"});\"\n                                ],\n                            \"type\": \"text/javascript\"\n                            }\n                        }\n                    ],\n                \"request\": {\n                    \"url\": \"https://echo.getpostman.com/headers\",\n                    \"method\": \"POST\",\n                    \"header\": [\n                        {\n                            \"key\": \"Content-Type\",\n                            \"value\": \"application/json\"\n                        }\n                    ]\n                }\n            }\n        ]\n    }\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "https://api.getpostman.com/collections/12ece9e1-2abf-4edc-8e34-de66e74114d2",
									"protocol": "https",
									"host": [
										"api",
										"getpostman",
										"com"
									],
									"path": [
										"collections",
										"12ece9e1-2abf-4edc-8e34-de66e74114d2"
									]
								}
							},
							"status": "OK",
							"code": 200,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json",
									"name": "Content-Type",
									"description": {
										"content": "",
										"type": "text/plain"
									}
								}
							],
							"cookie": [],
							"body": "{\n    \"collection\": {\n        \"id\": \"12ece9e1-2abf-4edc-8e34-de66e74114d2\",\n        \"name\": \"Test Collection\",\n        \"uid\": \"12345678-12ece9e1-2abf-4edc-8e34-de66e74114d2\"\n    }\n}"
						},
						{
							"name": "Forbidden",
							"originalRequest": {
								"method": "PUT",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/json"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n    \"collection\": {\n        \"info\": {\n            \"name\": \"Test Collection\",\n            \"description\": \"This collection makes a request to the Postman Echo service to get a list of request headers sent by an HTTP client.\",\n            \"schema\": \"https://schema.getpostman.com/json/collection/v2.1.0/collection.json\"\n        },\n        \"item\": [\n            {\n                \"name\": \"Test POST Response\",\n                \"event\": [\n                    {\n                        \"listen\": \"test\",\n                        \"script\": {\n                            \"id\": \"7d2334fc-a84a-4c3d-b26c-7529afa4c0ae\",\n                            \"exec\": [\n                                \"pm.test(\\\"Status code is 200\\\", function () {\",\n                                \"    pm.response.to.have.status(200);\",\n                                \"});\"\n                                ],\n                            \"type\": \"text/javascript\"\n                            }\n                        }\n                    ],\n                \"request\": {\n                    \"url\": \"https://echo.getpostman.com/headers\",\n                    \"method\": \"POST\",\n                    \"header\": [\n                        {\n                            \"key\": \"Content-Type\",\n                            \"value\": \"application/json\"\n                        }\n                    ]\n                }\n            }\n        ]\n    }\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "https://api.getpostman.com/collections/12ece9e1-2abf-4edc-8e34-de66e74114d2",
									"protocol": "https",
									"host": [
										"api",
										"getpostman",
										"com"
									],
									"path": [
										"collections",
										"12ece9e1-2abf-4edc-8e34-de66e74114d2"
									]
								}
							},
							"status": "Forbidden",
							"code": 403,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json",
									"description": {
										"content": "",
										"type": "text/plain"
									}
								}
							],
							"cookie": [],
							"body": "{\n    \"error\": {\n        \"name\": \"forbiddenError\",\n        \"message\": \"You do not have enough permissions to perform this action.\"\n    }\n}"
						},
						{
							"name": "Not Found",
							"originalRequest": {
								"method": "PUT",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/json"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n    \"collection\": {\n        \"info\": {\n            \"name\": \"Test Collection\",\n            \"description\": \"This collection makes a request to the Postman Echo service to get a list of request headers sent by an HTTP client.\",\n            \"schema\": \"https://schema.getpostman.com/json/collection/v2.1.0/collection.json\"\n        },\n        \"item\": [\n            {\n                \"name\": \"Test POST Response\",\n                \"event\": [\n                    {\n                        \"listen\": \"test\",\n                        \"script\": {\n                            \"id\": \"7d2334fc-a84a-4c3d-b26c-7529afa4c0ae\",\n                            \"exec\": [\n                                \"pm.test(\\\"Status code is 200\\\", function () {\",\n                                \"    pm.response.to.have.status(200);\",\n                                \"});\"\n                                ],\n                            \"type\": \"text/javascript\"\n                            }\n                        }\n                    ],\n                \"request\": {\n                    \"url\": \"https://echo.getpostman.com/headers\",\n                    \"method\": \"POST\",\n                    \"header\": [\n                        {\n                            \"key\": \"Content-Type\",\n                            \"value\": \"application/json\"\n                        }\n                    ]\n                }\n            }\n        ]\n    }\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "https://api.getpostman.com/collections/12ece9e1-2abf-4edc-8e34-de66e74114d2",
									"protocol": "https",
									"host": [
										"api",
										"getpostman",
										"com"
									],
									"path": [
										"collections",
										"12ece9e1-2abf-4edc-8e34-de66e74114d2"
									]
								}
							},
							"status": "Not Found",
							"code": 404,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json",
									"name": "Content-Type",
									"description": {
										"content": "",
										"type": "text/plain"
									}
								}
							],
							"cookie": [],
							"body": "{\n    \"error\": {\n        \"name\": \"instanceNotFoundError\",\n        \"message\": \"The specified item does not exist.\",\n        \"details\": {\n            \"item\": \"collection\",\n            \"id\": \"12ece9e1-2abf-4edc-8e34-de66e74114d2\"\n        }\n    }\n}"
						},
						{
							"name": "Malformed Request",
							"originalRequest": {
								"method": "PUT",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/json"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n    \"collection\": {\n        \"info\": {\n            \"name\": \"Test Collection\"\n        }\n    }\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "https://api.getpostman.com/collections/12ece9e1-2abf-4edc-8e34-de66e74114d2",
									"protocol": "https",
									"host": [
										"api",
										"getpostman",
										"com"
									],
									"path": [
										"collections",
										"12ece9e1-2abf-4edc-8e34-de66e74114d2"
									]
								}
							},
							"status": "Bad Request",
							"code": 400,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json",
									"name": "Content-Type",
									"description": {
										"content": "",
										"type": "text/plain"
									}
								}
							],
							"cookie": [],
							"body": "{\n    \"error\": {\n        \"name\": \"malformedRequestError\",\n        \"message\": \"Found 2 errors with the supplied collection.\",\n        \"details\": [\n            \": must have required property 'item'\",\n            \"info: must have required property 'schema'\"\n        ]\n    }\n}"
						},
						{
							"name": "Collection ID Mismatch",
							"originalRequest": {
								"method": "PUT",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/json"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n    \"collection\": {\n        \"info\": {\n            \"name\": \"Test Collection\",\n            \"description\": \"This collection makes a request to the Postman Echo service to get a list of request headers sent by an HTTP client.\",\n            \"schema\": \"https://schema.getpostman.com/json/collection/v2.1.0/collection.json\"\n        },\n        \"item\": [\n            {\n                \"name\": \"Test POST Response\",\n                \"event\": [\n                    {\n                        \"listen\": \"test\",\n                        \"script\": {\n                            \"id\": \"7d2334fc-a84a-4c3d-b26c-7529afa4c0ae\",\n                            \"exec\": [\n                                \"pm.test(\\\"Status code is 200\\\", function () {\",\n                                \"    pm.response.to.have.status(200);\",\n                                \"});\"\n                                ],\n                            \"type\": \"text/javascript\"\n                            }\n                        }\n                    ],\n                \"request\": {\n                    \"url\": \"https://echo.getpostman.com/headers\",\n                    \"method\": \"POST\",\n                    \"header\": [\n                        {\n                            \"key\": \"Content-Type\",\n                            \"value\": \"application/json\"\n                        }\n                    ]\n                }\n            }\n        ]\n    }\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "https://api.getpostman.com/collections/12ece9e1-2abf-4edc-8e34-de66e74114d2",
									"protocol": "https",
									"host": [
										"api",
										"getpostman",
										"com"
									],
									"path": [
										"collections",
										"12ece9e1-2abf-4edc-8e34-de66e74114d2"
									]
								}
							},
							"status": "Bad Request",
							"code": 400,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json",
									"name": "Content-Type",
									"description": {
										"content": "",
										"type": "text/plain"
									}
								}
							],
							"cookie": [],
							"body": "{\n    \"error\": {\n        \"name\": \"collectionMismatchError\",\n        \"message\": \"The collection ID in the path does not match the collection ID in the request body.\"\n    }\n}"
						},
						{
							"name": "Rate Limit Exceeded",
							"originalRequest": {
								"method": "PUT",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/json"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n    \"collection\": {\n        \"info\": {\n            \"name\": \"Test Collection\",\n            \"description\": \"This collection makes a request to the Postman Echo service to get a list of request headers sent by an HTTP client.\",\n            \"schema\": \"https://schema.getpostman.com/json/collection/v2.1.0/collection.json\"\n        },\n        \"item\": [\n            {\n                \"name\": \"Test POST Response\",\n                \"event\": [\n                    {\n                        \"listen\": \"test\",\n                        \"script\": {\n                            \"id\": \"7d2334fc-a84a-4c3d-b26c-7529afa4c0ae\",\n                            \"exec\": [\n                                \"pm.test(\\\"Status code is 200\\\", function () {\",\n                                \"    pm.response.to.have.status(200);\",\n                                \"});\"\n                                ],\n                            \"type\": \"text/javascript\"\n                            }\n                        }\n                    ],\n                \"request\": {\n                    \"url\": \"https://echo.getpostman.com/headers\",\n                    \"method\": \"POST\",\n                    \"header\": [\n                        {\n                            \"key\": \"Content-Type\",\n                            \"value\": \"application/json\"\n                        }\n                    ]\n                }\n            }\n        ]\n    }\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "https://api.getpostman.com/collections/12ece9e1-2abf-4edc-8e34-de66e74114d2",
									"protocol": "https",
									"host": [
										"api",
										"getpostman",
										"com"
									],
									"path": [
										"collections",
										"12ece9e1-2abf-4edc-8e34-de66e74114d2"
									]
								}
							},
							"status": "Too Many Requests",
							"code": 429,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json",
									"description": {
										"content": "",
										"type": "text/plain"
									}
								}
							],
							"cookie": [],
							"body": "{\n    \"error\": \"rateLimited\",\n    \"message\": \"Rate limit exceeded. Please retry after 1669048687\"\n}"
						},
						{
							"name": "Update a recipe",
							"originalRequest": {
								"method": "PUT",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/json"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n    \"title\": \"Spaghetti Carbonara\",\n    \"ingredients\": [\n        \"Spaghetti\",\n        \"country Eggs\",\n        \"chedar Cheese\",\n        \"Black Pepper\",\n        \"Pancetta\"\n    ],\n    \"instructions\": \"Cook spaghetti. Mix eggs and cheese. Combine with pancetta and pepper.\",\n    \"prepTime\": 15,\n    \"cookTime\": 25,\n    \"servings\": 4,\n    \"difficulty\": \"Medium\",\n    \"cuisine\": \"Italian\",\n    \"category\": \"Pasta\",\n    \"imageUrl\": \"http://example.com/carbonara.jpg\"\n    \n}"
								},
								"url": {
									"raw": "http://localhost:5000/api/recipes/67a5afe0a4e532499fa604c3",
									"protocol": "http",
									"host": [
										"localhost"
									],
									"port": "5000",
									"path": [
										"api",
										"recipes",
										"67a5afe0a4e532499fa604c3"
									]
								}
							},
							"status": "OK",
							"code": 200,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "X-Powered-By",
									"value": "Express"
								},
								{
									"key": "Access-Control-Allow-Origin",
									"value": "*"
								},
								{
									"key": "Content-Type",
									"value": "application/json; charset=utf-8"
								},
								{
									"key": "Content-Length",
									"value": "471"
								},
								{
									"key": "ETag",
									"value": "W/\"1d7-b9nbnt01Sx4vwKvAaYOd7HsuEps\""
								},
								{
									"key": "Date",
									"value": "Fri, 07 Feb 2025 09:59:33 GMT"
								},
								{
									"key": "Connection",
									"value": "keep-alive"
								},
								{
									"key": "Keep-Alive",
									"value": "timeout=5"
								}
							],
							"cookie": [],
							"body": "{\n    \"_id\": \"67a5afe0a4e532499fa604c3\",\n    \"title\": \"Spaghetti Carbonara\",\n    \"ingredients\": [\n        \"Spaghetti\",\n        \"country Eggs\",\n        \"chedar Cheese\",\n        \"Black Pepper\",\n        \"Pancetta\"\n    ],\n    \"instructions\": \"Cook spaghetti. Mix eggs and cheese. Combine with pancetta and pepper.\",\n    \"prepTime\": 15,\n    \"cookTime\": 25,\n    \"servings\": 4,\n    \"difficulty\": \"Medium\",\n    \"cuisine\": \"Italian\",\n    \"category\": \"Pasta\",\n    \"imageUrl\": \"http://example.com/carbonara.jpg\",\n    \"createdAt\": \"2025-02-07T07:01:52.879Z\",\n    \"updatedAt\": \"2025-02-07T07:01:52.879Z\",\n    \"__v\": 0\n}"
						}
					]
				},
				{
					"name": "Get all collections",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									""
								],
								"type": "text/javascript",
								"packages": {}
							}
						}
					],
					"request": {
						"auth": {
							"type": "noauth"
						},
						"method": "GET",
						"header": [],
						"url": {
							"raw": "http://localhost:5000/api/recipes",
							"protocol": "http",
							"host": [
								"localhost"
							],
							"port": "5000",
							"path": [
								"api",
								"recipes"
							]
						},
						"description": "### 5\\. Get All Recipes\n\n**Endpoint:** GET /api/recipes\n\n**Description:**  \nFetches all available recipes."
					},
					"response": [
						{
							"name": "Successful Response",
							"originalRequest": {
								"method": "GET",
								"header": [],
								"url": {
									"raw": "https://api.getpostman.com/collections",
									"protocol": "https",
									"host": [
										"api",
										"getpostman",
										"com"
									],
									"path": [
										"collections"
									],
									"query": [
										{
											"key": "workspace",
											"value": "1f0df51a-8658-4ee8-a2a1-d2567dfa09a9",
											"description": "Optional. A workspace ID.",
											"disabled": true
										}
									]
								}
							},
							"status": "OK",
							"code": 200,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json",
									"description": {
										"content": "",
										"type": "text/plain"
									}
								}
							],
							"cookie": [],
							"body": "{\n    \"collections\": [\n        {\n            \"id\": \"dac5eac9-148d-a32e-b76b-3edee9da28f7\",\n            \"name\": \"Cloud API\",\n            \"owner\": \"12345678\",\n            \"createdAt\": \"2022-04-12T10:29:46.000Z\",\n            \"updatedAt\": \"2022-04-12T10:29:56.000Z\",\n            \"uid\": \"12345678-dac5eac9-148d-a32e-b76b-3edee9da28f7\",\n            \"isPublic\": true\n        },\n        {\n            \"id\": \"12ece9e1-2abf-4edc-8e34-de66e74114d2\",\n            \"name\": \"Test Collection\",\n            \"owner\": \"12345678\",\n            \"createdAt\": \"2022-01-13T10:21:46.000Z\",\n            \"updatedAt\": \"2022-02-12T11:29:56.000Z\",\n            \"uid\": \"12345678-12ece9e1-2abf-4edc-8e34-de66e74114d2\",\n            \"isPublic\": false,\n            \"fork\": {\n                \"label\": \"Test Fork\",\n                \"createdAt\": \"2022-06-16T19:51:44.069Z\",\n                \"from\": \"12345678-12ece9e1-2abf-4edc-8e34-de66e74114d2\"\n            }\n        },\n        {\n            \"id\": \"f695cab7-6878-eb55-7943-ad88e1ccfd65\",\n            \"name\": \"Postman Echo\",\n            \"owner\": \"12345678\",\n            \"createdAt\": \"2021-04-11T09:18:26.000Z\",\n            \"updatedAt\": \"2022-05-01T15:29:32.000Z\",\n            \"uid\": \"12345678-f695cab7-6878-eb55-7943-ad88e1ccfd65\",\n            \"isPublic\": true\n        }\n    ]\n}"
						},
						{
							"name": "Filter by Workspace",
							"originalRequest": {
								"method": "GET",
								"header": [],
								"url": {
									"raw": "https://api.getpostman.com/collections?workspace=1f0df51a-8658-4ee8-a2a1-d2567dfa09a9",
									"protocol": "https",
									"host": [
										"api",
										"getpostman",
										"com"
									],
									"path": [
										"collections"
									],
									"query": [
										{
											"key": "workspace",
											"value": "1f0df51a-8658-4ee8-a2a1-d2567dfa09a9",
											"description": "Optional. A workspace ID."
										}
									]
								}
							},
							"status": "OK",
							"code": 200,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json",
									"description": {
										"content": "",
										"type": "text/plain"
									}
								}
							],
							"cookie": [],
							"body": "{\n    \"collections\": [\n        {\n            \"id\": \"dac5eac9-148d-a32e-b76b-3edee9da28f7\",\n            \"name\": \"Cloud API\",\n            \"owner\": \"12345678\",\n            \"createdAt\": \"2022-04-12T10:29:46.000Z\",\n            \"updatedAt\": \"2022-04-12T10:29:56.000Z\",\n            \"uid\": \"12345678-dac5eac9-148d-a32e-b76b-3edee9da28f7\",\n            \"isPublic\": true\n        }\n    ]\n}"
						},
						{
							"name": "Rate Limit Exceeded",
							"originalRequest": {
								"method": "GET",
								"header": [],
								"url": {
									"raw": "https://api.getpostman.com/collections",
									"protocol": "https",
									"host": [
										"api",
										"getpostman",
										"com"
									],
									"path": [
										"collections"
									],
									"query": [
										{
											"key": "workspace",
											"value": "1f0df51a-8658-4ee8-a2a1-d2567dfa09a9",
											"description": "Optional. A workspace ID.",
											"disabled": true
										}
									]
								}
							},
							"status": "Too Many Requests",
							"code": 429,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json",
									"description": {
										"content": "",
										"type": "text/plain"
									}
								}
							],
							"cookie": [],
							"body": "{\n    \"error\": \"rateLimited\",\n    \"message\": \"Rate limit exceeded. Please retry after 1669048687\"\n}"
						},
						{
							"name": "Get all collections",
							"originalRequest": {
								"method": "GET",
								"header": [],
								"url": {
									"raw": "http://localhost:5000/api/recipes",
									"protocol": "http",
									"host": [
										"localhost"
									],
									"port": "5000",
									"path": [
										"api",
										"recipes"
									]
								}
							},
							"status": "OK",
							"code": 200,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "X-Powered-By",
									"value": "Express"
								},
								{
									"key": "Access-Control-Allow-Origin",
									"value": "*"
								},
								{
									"key": "Content-Type",
									"value": "application/json; charset=utf-8"
								},
								{
									"key": "Content-Length",
									"value": "2183"
								},
								{
									"key": "ETag",
									"value": "W/\"887-Zsv4F+clhjN8E/1u67qyNdUCB1E\""
								},
								{
									"key": "Date",
									"value": "Fri, 07 Feb 2025 10:33:48 GMT"
								},
								{
									"key": "Connection",
									"value": "keep-alive"
								},
								{
									"key": "Keep-Alive",
									"value": "timeout=5"
								}
							],
							"cookie": [],
							"body": "[\n    {\n        \"_id\": \"67a5afe0a4e532499fa604c3\",\n        \"title\": \"Spaghetti Carbonara\",\n        \"ingredients\": [\n            \"Spaghetti\",\n            \"country Eggs\",\n            \"chedar Cheese\",\n            \"Black Pepper\",\n            \"Pancetta\"\n        ],\n        \"instructions\": \"Cook spaghetti. Mix eggs and cheese. Combine with pancetta and pepper.\",\n        \"prepTime\": 15,\n        \"cookTime\": 25,\n        \"servings\": 4,\n        \"difficulty\": \"Medium\",\n        \"cuisine\": \"Italian\",\n        \"category\": \"Pasta\",\n        \"imageUrl\": \"http://example.com/carbonara.jpg\",\n        \"createdAt\": \"2025-02-07T07:01:52.879Z\",\n        \"updatedAt\": \"2025-02-07T07:01:52.879Z\",\n        \"__v\": 0\n    },\n    {\n        \"_id\": \"67a5b0aca4e532499fa604cb\",\n        \"title\": \"Classic Margherita Pizza\",\n        \"ingredients\": [\n            \"Pizza Dough\",\n            \"Tomato Sauce\",\n            \"Fresh Mozzarella\",\n            \"Fresh Basil\",\n            \"Olive Oil\",\n            \"Salt\"\n        ],\n        \"instructions\": \"Preheat oven to 475°F (245°C). Roll out pizza dough. Spread tomato sauce evenly. Add slices of fresh mozzarella. Bake for 10-12 minutes until golden and bubbly. Garnish with fresh basil and drizzle with olive oil before serving.\",\n        \"prepTime\": 15,\n        \"cookTime\": 12,\n        \"servings\": 2,\n        \"difficulty\": \"Medium\",\n        \"cuisine\": \"Italian\",\n        \"category\": \"Pizza\",\n        \"imageUrl\": \"http://example.com/margherita-pizza.jpg\",\n        \"createdAt\": \"2025-02-07T07:05:16.601Z\",\n        \"updatedAt\": \"2025-02-07T07:05:16.601Z\",\n        \"__v\": 0\n    },\n    {\n        \"_id\": \"67a5bfe027d3c820235f6ba8\",\n        \"title\": \"Beef Stroganoff\",\n        \"ingredients\": [\n            \"Beef Sirloin\",\n            \"Mushrooms\",\n            \"Onion\",\n            \"Garlic\",\n            \"Sour Cream\",\n            \"Beef Broth\",\n            \"Dijon Mustard\",\n            \"Butter\",\n            \"Flour\",\n            \"Egg Noodles\"\n        ],\n        \"instructions\": \"Sauté onions, garlic, and mushrooms in butter. Add sliced beef and cook until browned. Stir in flour, mustard, and beef broth. Simmer until thickened. Mix in sour cream and serve over cooked egg noodles.\",\n        \"prepTime\": 15,\n        \"cookTime\": 25,\n        \"servings\": 4,\n        \"difficulty\": \"Medium\",\n        \"cuisine\": \"Russian\",\n        \"category\": \"Main Course\",\n        \"imageUrl\": \"http://example.com/beef-stroganoff.jpg\",\n        \"createdAt\": \"2025-02-07T08:10:08.252Z\",\n        \"updatedAt\": \"2025-02-07T08:10:08.252Z\",\n        \"__v\": 0\n    },\n    {\n        \"_id\": \"67a5d35227d3c820235f6baa\",\n        \"title\": \"buritto\",\n        \"ingredients\": [\n            \"carrot\",\n            \"onion\",\n            \"tomato\",\n            \"mayonise\"\n        ],\n        \"instructions\": \"mix all ingegredients together and stuff inside bun\",\n        \"prepTime\": 15,\n        \"cookTime\": 25,\n        \"servings\": 1,\n        \"difficulty\": \"Easy\",\n        \"cuisine\": \"mexican\",\n        \"category\": \"Main Course\",\n        \"imageUrl\": \"buritto.url\",\n        \"createdAt\": \"2025-02-07T09:33:06.927Z\",\n        \"updatedAt\": \"2025-02-07T09:33:06.927Z\",\n        \"__v\": 0\n    }\n]"
						},
						{
							"name": "Get all recipes",
							"originalRequest": {
								"method": "GET",
								"header": [],
								"url": {
									"raw": "http://localhost:5000/api/recipes",
									"protocol": "http",
									"host": [
										"localhost"
									],
									"port": "5000",
									"path": [
										"api",
										"recipes"
									]
								}
							},
							"status": "OK",
							"code": 200,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "X-Powered-By",
									"value": "Express"
								},
								{
									"key": "Access-Control-Allow-Origin",
									"value": "*"
								},
								{
									"key": "Content-Type",
									"value": "application/json; charset=utf-8"
								},
								{
									"key": "Content-Length",
									"value": "2183"
								},
								{
									"key": "ETag",
									"value": "W/\"887-Zsv4F+clhjN8E/1u67qyNdUCB1E\""
								},
								{
									"key": "Date",
									"value": "Fri, 07 Feb 2025 10:40:15 GMT"
								},
								{
									"key": "Connection",
									"value": "keep-alive"
								},
								{
									"key": "Keep-Alive",
									"value": "timeout=5"
								}
							],
							"cookie": [],
							"body": "[\n    {\n        \"_id\": \"67a5afe0a4e532499fa604c3\",\n        \"title\": \"Spaghetti Carbonara\",\n        \"ingredients\": [\n            \"Spaghetti\",\n            \"country Eggs\",\n            \"chedar Cheese\",\n            \"Black Pepper\",\n            \"Pancetta\"\n        ],\n        \"instructions\": \"Cook spaghetti. Mix eggs and cheese. Combine with pancetta and pepper.\",\n        \"prepTime\": 15,\n        \"cookTime\": 25,\n        \"servings\": 4,\n        \"difficulty\": \"Medium\",\n        \"cuisine\": \"Italian\",\n        \"category\": \"Pasta\",\n        \"imageUrl\": \"http://example.com/carbonara.jpg\",\n        \"createdAt\": \"2025-02-07T07:01:52.879Z\",\n        \"updatedAt\": \"2025-02-07T07:01:52.879Z\",\n        \"__v\": 0\n    },\n    {\n        \"_id\": \"67a5b0aca4e532499fa604cb\",\n        \"title\": \"Classic Margherita Pizza\",\n        \"ingredients\": [\n            \"Pizza Dough\",\n            \"Tomato Sauce\",\n            \"Fresh Mozzarella\",\n            \"Fresh Basil\",\n            \"Olive Oil\",\n            \"Salt\"\n        ],\n        \"instructions\": \"Preheat oven to 475°F (245°C). Roll out pizza dough. Spread tomato sauce evenly. Add slices of fresh mozzarella. Bake for 10-12 minutes until golden and bubbly. Garnish with fresh basil and drizzle with olive oil before serving.\",\n        \"prepTime\": 15,\n        \"cookTime\": 12,\n        \"servings\": 2,\n        \"difficulty\": \"Medium\",\n        \"cuisine\": \"Italian\",\n        \"category\": \"Pizza\",\n        \"imageUrl\": \"http://example.com/margherita-pizza.jpg\",\n        \"createdAt\": \"2025-02-07T07:05:16.601Z\",\n        \"updatedAt\": \"2025-02-07T07:05:16.601Z\",\n        \"__v\": 0\n    },\n    {\n        \"_id\": \"67a5bfe027d3c820235f6ba8\",\n        \"title\": \"Beef Stroganoff\",\n        \"ingredients\": [\n            \"Beef Sirloin\",\n            \"Mushrooms\",\n            \"Onion\",\n            \"Garlic\",\n            \"Sour Cream\",\n            \"Beef Broth\",\n            \"Dijon Mustard\",\n            \"Butter\",\n            \"Flour\",\n            \"Egg Noodles\"\n        ],\n        \"instructions\": \"Sauté onions, garlic, and mushrooms in butter. Add sliced beef and cook until browned. Stir in flour, mustard, and beef broth. Simmer until thickened. Mix in sour cream and serve over cooked egg noodles.\",\n        \"prepTime\": 15,\n        \"cookTime\": 25,\n        \"servings\": 4,\n        \"difficulty\": \"Medium\",\n        \"cuisine\": \"Russian\",\n        \"category\": \"Main Course\",\n        \"imageUrl\": \"http://example.com/beef-stroganoff.jpg\",\n        \"createdAt\": \"2025-02-07T08:10:08.252Z\",\n        \"updatedAt\": \"2025-02-07T08:10:08.252Z\",\n        \"__v\": 0\n    },\n    {\n        \"_id\": \"67a5d35227d3c820235f6baa\",\n        \"title\": \"buritto\",\n        \"ingredients\": [\n            \"carrot\",\n            \"onion\",\n            \"tomato\",\n            \"mayonise\"\n        ],\n        \"instructions\": \"mix all ingegredients together and stuff inside bun\",\n        \"prepTime\": 15,\n        \"cookTime\": 25,\n        \"servings\": 1,\n        \"difficulty\": \"Easy\",\n        \"cuisine\": \"mexican\",\n        \"category\": \"Main Course\",\n        \"imageUrl\": \"buritto.url\",\n        \"createdAt\": \"2025-02-07T09:33:06.927Z\",\n        \"updatedAt\": \"2025-02-07T09:33:06.927Z\",\n        \"__v\": 0\n    }\n]"
						}
					]
				}
			],
			"description": "The `/collections` endpoints let you manage your [collections](https://learning.postman.com/docs/sending-requests/intro-to-collections/)."
		}
	],
	"auth": {
		"type": "apikey",
		"apikey": [
			{
				"key": "key",
				"value": "X-API-Key",
				"type": "string"
			},
			{
				"key": "value",
				"value": "{{token}}",
				"type": "string"
			}
		]
	},
	"event": [
		{
			"listen": "prerequest",
			"script": {
				"type": "text/javascript",
				"exec": [
					""
				]
			}
		},
		{
			"listen": "test",
			"script": {
				"type": "text/javascript",
				"exec": [
					""
				]
			}
		}
	],
	"variable": [
		{
			"key": "baseUrl",
			"value": "https://farming-simulator.pstmn.io"
		}
	]
}